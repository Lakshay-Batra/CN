<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>MAIN</title>
<style>
<!--
 table.MsoNormalTable
	{mso-style-parent:"";
	font-size:10.0pt;
	font-family:"Times New Roman"}
-->
</style>
</head>

<body>

<p align="center"><b><font face="Arial"><a href="Main.htm" style="color: #00c">MAIN</a></font></b></p>
<p align="center"><u><b><font size="6" face="Arial" color="#FF0000">LAN &amp; MAN PROTOCOL</font></b></u></p>
<h1><font face="Arial">IP Packet Header</font></h1>
<p><font face="Arial">The Internet Protocol (IP) uses a Datagram service to 
transfer packets of data between end systems using routers.</font></p>
<p><font face="Arial">The IP packet header consists of 20 bytes of data. An 
option exists within the header that allows further optional bytes to be added, 
but this is not normally used (with the occasional exception of something called 
&quot;Router Alert&quot;). The full header is shown below:</font></p>
<p>&nbsp;</p>
<p align="center"><font face="Arial">
<img src="ip-header.gif" align="bottom" width="674" height="255"></font></p>
<p align="justify"><font face="Arial">The header fields are discussed below:</font></p>
<ul>
  <li>
  <p align="justify"><font face="Arial"><b>Version</b> (always set to the value 
  4, which is the current version of IP) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>IP Header Length</b> (number of 32 
  -bit words forming the header, usually five) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Type of Service (ToS)</b>, now known 
  as<b> Differentiated Services Code Point (DSCP) </b>(usually set to 0, but may 
  indicate particular Quality of Service needs from the network, the DSCP 
  defines the way routers should queue packets while they are waiting to be 
  forwarded). </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Size of Datagram</b> (in bytes, this 
  is the combined length of the header and the data) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Identification</b> ( 16-bit number 
  which together with the source address uniquely identifies this packet - used 
  during reassembly of fragmented datagrams) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Flags</b> (a sequence of three flags 
  (one of the 4 bits is unused) used to control whether routers are allowed to 
  fragment a packet (i.e. the Don't Fragment, DF, flag), and to indicate the 
  parts of a packet to the receiver) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Fragmentation Offset</b> (a byte 
  count from the start of the original sent packet, set by any router which 
  performs IP router fragmentation) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Time To Live</b> (Number of hops 
  /links which the packet may be routed over, decremented by most routers - used 
  to prevent accidental routing loops) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Protocol</b> (Service Access Point 
  (SAP) which indicates the type of transport packet being carried (e.g. 1 = 
  ICMP; 2= IGMP; 6 = TCP; 17= UDP). </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Header Checksum</b> (A 1's complement 
  checksum inserted by the sender and updated whenever the packet header is 
  modified by a router - Used to detect processing errors introduced into the 
  packet inside a router or bridge where the packet is not protected by a link 
  layer cyclic redundancy check. Packets with an invalid checksum are discarded 
  by all nodes in an IP network) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Source Address</b> (the IP address of 
  the original sender of the packet) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Destination Address</b> (the IP 
  address of the final destination of the packet) </font></li>
  <li>
  <p align="justify"><font face="Arial"><b>Options</b> (not normally used, but 
  when used the IP header length will be greater than five 32-bit words to 
  indicate the size of the options field)</font></li>
</ul>
<p align="justify"><font face="Arial"><b>Version:</b> 4 bits- The Version field 
indicates the format of the internet header. This document describes version 4.<br>
<br>
<b>IHL:</b> 4 bits- Internet Header Length is the length of the internet header 
in 32 bit words, and thus points to the beginning of the data. Note that<br>
the minimum value for a correct header is 5.<br>
&nbsp;</font></p>
<p align="justify"><font face="Arial"><b>Type of Service:</b> 8 bits- The Type 
of Service provides an indication of the abstract parameters of the quality of 
service desired. These parameters are to be used to guide the selection of the 
actual service parameters when transmitting a datagram through a particular 
network. Several networks offer service precedence, which somehow treats high 
precedence traffic as more important than other traffic (generally by accepting 
only traffic above a certain precedence at time of high load). The major choice 
is a three way tradeoff between low-delay, high-reliability, and 
high-throughput.<br>
<br>
Bits 0-2: Precedence.<br>
Bit 3: 0 = Normal Delay, 1 = Low Delay.<br>
Bits 4: 0 = Normal Throughput, 1 = High Throughput.<br>
Bits 5: 0 = Normal Relibility, 1 = High Relibility.<br>
Bit 6-7: Reserved for Future Use.<br>
<br>
0 1 2 3 4 5 6 7<br>
+-----+-----+-----+-----+-----+-----+-----+-----+<br>
| | | | | | |<br>
| PRECEDENCE | D | T | R | 0 | 0 |<br>
| | | | | | |<br>
+-----+-----+-----+-----+-----+-----+-----+-----+<br>
<br>
Precedence<br>
<br>
111 - Network Control<br>
110 - Internetwork Control<br>
101 - CRITIC/ECP<br>
100 - Flash Override<br>
011 - Flash<br>
010 - Immediate<br>
001 - Priority<br>
000 - Routine<br>
<br>
The use of the Delay, Throughput, and Reliability indications may increase the 
cost (in some sense) of the service. In many networks better performance for one 
of these parameters is coupled with worse performance on another. Except for 
very unusual cases at most two of these three indications should be set. The 
type of service is used to specify the treatment of the datagram during its 
transmission through the internet system. Example mappings of the internet type 
of service to the actual service provided on networks such as AUTODIN II, 
ARPANET, SATNET, and PRNET is given in &quot;Service Mappings&quot;.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The Network Control precedence 
designation is intended to be used within a network only. The actual use and 
control of that designation is up to each network. The Internet work Control 
designation is intended for use by gateway control originators only. If the 
actual use of these precedence designations is of concern to a particular 
network, it is the responsibility of that network to control the access to, and 
use of, those precedence designations. </font></p>
<p align="justify"><font face="Arial"><br>
Total Length: 16 bits- Total Length is the length of the datagram, measured in 
octets, including internet header and data. This field allows the length of a 
datagram to be up to 65,535 octets. Such long datagrams are impractical for most 
hosts and networks. All hosts must be prepared to accept datagrams of up to 576 
octets (whether they arrive whole or in fragments). It is recommended that hosts 
only send datagrams larger than 576 octets if they have assurance that the 
destination is prepared to accept the larger datagrams.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The number 
576 is selected to allow a reasonable sized data block to be transmitted in 
addition to the required header information. For<br>
example, this size allows a data block of 512 octets plus 64 header octets to 
fit in a datagram. The maximal internet header is 60 octets, and a typical 
internet header is 20 octets, allowing a margin for headers of higher level 
protocols.<br>
<br>
Identification: 16 bits- An identifying value assigned by the sender to aid in 
assembling the fragments of a datagram.<br>
<br>
Flags: 3 bits- Various Control Flags.<br>
<br>
Bit 0: reserved, must be zero<br>
Bit 1: (DF) 0 = May Fragment, 1 = Don't Fragment.<br>
Bit 2: (MF) 0 = Last Fragment, 1 = More Fragments.<br>
<br>
0 1 2<br>
+---+---+---+<br>
| | D | M |<br>
| 0 | F | F |<br>
+---+---+---+<br>
<br>
Fragment Offset: 13 bits- This field indicates where in the datagram this 
fragment belongs. The fragment offset is measured in units of 8 octets (64 
bits). The first fragment has offset zero.<br>
<br>
Time to Live: 8 bits- This field indicates the maximum time the datagram is 
allowed to remain in the internet system. If this field contains the value<br>
zero, then the datagram must be destroyed. This field is modified in internet 
header processing. The time is measured in units of seconds, but since every 
module that processes a datagram must decrease the TTL by at least one even if 
it process the datagram in less than a second, the TTL must be thought of only 
as an upper bound on the time a datagram may exist. The intention is to cause 
undeliverable datagrams to be discarded, and to bound the maximum datagram 
lifetime.<br>
<br>
Protocol: 8 bits- This field indicates the next level protocol used in the data 
portion of the internet datagram. The values for various protocols are specified 
in &quot;Assigned Numbers&quot;.<br>
<br>
Header Checksum: 16 bits- A checksum on the header only. Since some header 
fields change (e.g., time to live), this is recomputed and verified at each 
point that the internet header is processed. The checksum algorithm is:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The checksum 
field is the 16 bit one's complement of the one's complement sum of all 16 bit 
words in the header. For purposes of computing the checksum, the value of the 
checksum field is zero. This is a simple to compute checksum and experimental 
evidence indicates it is adequate, but it is provisional and may be replaced by 
a CRC procedure, depending on further experience. <br>
Source Address: 32 bits<br>
<br>
The source address. 32 bits.<br>
Destination Address: 32 bits.<br>
&nbsp;</font></p>
<p align="justify"><font face="Arial">Options: variable- The options may appear 
or not in datagrams. They must be implemented by all IP modules (host and 
gateways). What is optional<br>
is their transmission in any particular datagram, not their implementation. In 
some environments the security option may be required in all datagrams. The 
option field is variable in length. There may be zero or more options. There are 
two cases for the format of an option: <br>
&nbsp;</font></p>
<p align="justify"><font face="Arial">Case 1: A single octet of option-type.<br>
<br>
Case 2: An option-type octet, an option-length octet, and the actual option-data 
octets.<br>
<br>
The option-length octet counts the option-type octet and the option-length octet 
as well as the option-data octets.<br>
<br>
The option-type octet is viewed as having 3 fields:<br>
<br>
1 bit copied flag,<br>
2 bits option class,<br>
5 bits option number.<br>
<br>
The copied flag indicates that this option is copied into all fragments on 
fragmentation.<br>
<br>
0 = not copied<br>
1 = copied<br>
<br>
The option classes are:<br>
<br>
0 = control<br>
1 = reserved for future use<br>
2 = debugging and measurement<br>
3 = reserved for future use</font></p>
<p align="center"><b><font face="Arial"><a href="Main.htm" style="color: #00c">
MAIN</a></font></b></p>

</body>

</html>