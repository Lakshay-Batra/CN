<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>MAIN</title>
<style>
<!--
 table.MsoNormalTable
	{mso-style-parent:"";
	font-size:10.0pt;
	font-family:"Times New Roman"}
-->
</style>
</head>

<body>

<p align="center">&nbsp;</p>
<p align="center"><b><font face="Arial"><a href="Main.htm" style="color: #00c">MAIN</a></font></b></p>
<p align="center"><u><b><font size="6" face="Arial" color="#FF0000">ICMP</font></b></u></p>
<p class="MsoNormal" align="center">
<span style="font-family: Arial; color: black">&nbsp;</span><font face="Arial"><img border="0" src="ICMP.h2.jpg" width="814" height="404"></font></p>
<p class="MsoNormal" align="justify"><span style="font-family:Arial">The Internet Control 
Message Protocol (ICMP) [RFC792] protocol is classic example of a client server 
application. The ICMP server executes on all IP end system computers and all IP 
intermediate systems (i.e routers). The protocol is used to report problems with 
delivery of IP datagrams within an IP network. It can be sued to show when a 
particular End System (ES) is not responding, when an IP network is not 
reachable, when a node is overloaded, when an error occurs in the IP header 
information, etc. The protocol is also frequently used by Internet managers to 
verify correct operations of End Systems (ES) and to check that routers are 
correctly routing packets to the specified destination address.</span></p>
<p>&nbsp;</p>
<div align="center">
  <font face="Arial">
  <img src="icmp-gen.gif" border="0" width="354" height="155"></font></div>
<p align="justify"><font face="Arial">ICMP messages generated by router R1, in response to 
message sent by H0 to H1 and forwarded by R0. This message could, for instance 
be generated if the MTU 
of the link between R0 and R1 was smaller than size of the IP packet, and the 
packet had the Don't Fragment (DF) bit set in the IP packet header. The ICMP 
message is returned to H0, since this is the source address specified in the IP 
packet that suffered the problem.</font></p>
<p align="center"><font face="Arial"><i>
<img src="icmp.gif" align="bottom" NATURALSIZEFLAG="3" width="306" height="88"></i></font></p>
<p align="center"><font face="Arial"><i>An ICMP message consisting of 4 bytes of 
PCI and an optional message</i></font></p>
<p align="justify"><span style="font-family:Arial">The format of an ICMP message is shown above. 
The 8-bit type code identifies the types of message. In this case two types of 
message are involved the ECHO request (sent by the client) and the ECHO reply 
(the response by the server). Each message may contain some optional data. When 
data are sent by a server, the server returns the data in the reply which is 
generated. ICMP packets are encapsulated in IP for transmission across an 
internet.</span></p>
<p align="justify"><span style="font-family:Arial">It is the responsibility of the network layer 
(IP) protocol to ensure that the ICMP message is sent to the correct 
destination. This is achieved by setting the destination address of the IP 
packet. The source address is set to the address of the computer generating the 
ICMP ECHO request and the IP protocol type is set to &quot;ICMP&quot; to indicate that the 
packet is to be handled by the remote end system's ICMP server program.</span></p>
<p align="justify"><span style="font-family:Arial">The figure below shows the encapsulation over 
an Ethernet LAN using an IP network layer header, and a MAC link layer header 
and trailer containing the 32-bit checksum:</span></p>
<p class="MsoNormal">&nbsp;</p>
<p align="center"><font face="Arial">
<img src="icmp-encap.gif" align="bottom" NATURALSIZEFLAG="3" width="445" height="55"></font></p>
<p align="center"><font face="Arial">
<i>Encapsulation for a complete ICMP packet (neglecting the
Ethernet preamble) </i></font></p>
<p align="justify"><font face="Arial">The &quot;ping&quot; program contains a client interface to ICMP. It 
may be used by a user to verify an end-to-end Internet Path is operational. The 
ping program also collects performance statistics (i.e. the measured round trip 
time and the number of times the remote server fails to reply. Each time an
ICMP echo reply message is received, the ping program displays a single line 
of text. The text printed by ping shows the received sequence number, and the 
measured round trip time (in milliseconds). Each ICMP Echo message contains a 
sequence number (starting at 0) that is incremented after each transmission, and 
a timestamp value indicating the transmission time.</font></p>
<p align="center"><font face="Arial"><i>
<img src="icmp-eg.gif" align="bottom" NATURALSIZEFLAG="3" width="409" height="271"></i></font></p>
<p align="center"><font face="Arial"><i>Use of the ping program to test whether 
the computer &quot;sysa&quot; is operational.</i></font></p>
<p align="justify"><font face="Arial">The operation of ICMP is illustrated in the frame 
transition diagram shown above. In this case there is only one Intermediate 
System (IS) (router).</font></p>
<p align="justify"><font face="Arial">The &quot;traceroute&quot; program also contains a client interface 
to ICMP. Like the &quot;ping&quot; program, it may be used by a user to verify an 
end-to-end Internet Path is operational, but also provides information on each 
of the Intermediate Systems (i.e. IP routers) to be found along the IP Path from 
the sender to the receiver. Traceroute uses ICMP echo messages. These are 
addressed to the target IP address. The sender manipulates the TTL (hop count) 
value at the IP layer to force each hop in turn to return an error message.</font></p>
<ul>
  <li>
  <p align="justify"><font face="Arial">The program starts by sending an ICMP Echo request 
  message with an IP destination address of the system to be tested and with a 
  Time To Live (TTL) value set to 1. The first system that receives this packet 
  decrements the TTL and discards the message, since this now has a value of 
  zero. Before it deletes the message, the system constructs an ICMP error 
  message (with an ICMP message type of &quot;TTL 
  exceeded&quot;) and returns this back to the sender. Receipt of this message 
  allows the sender to identify which system is one link away along the path to 
  the specified destination. </font></li>
  <li>
  <p align="justify"><font face="Arial">The sender repeats this two more times, each time 
  reporting the system that received the packet. If all packets travel along the 
  same path, each ICMP error message will be received from the same system. 
  Where two or more alternate paths are being used, the results may vary. </font>
  </li>
  <li>
  <p align="justify"><font face="Arial">If the system that responded was not the intended 
  destination, the sender repeats the process by sending a set of three 
  identical messages, but using a TTL value that is one larger than the previous 
  attempt. The first system forwards the packet (decrementing the TTL value in 
  the IP header), but a subsequent system that reduces the TTL value to zero, 
  generates an ICMP error message with its own source address. In this way, the 
  sender learns the identity of another system along the IP path to the 
  destination. </font></li>
  <li>
  <p align="justify"><font face="Arial">This process repeats until the sender receives a 
  response from the intended destination (or the maximum TTL value is reached).
  </font></li>
  <li>
  <p align="justify"><font face="Arial">Some Routers are configured to discard ICMP messages, 
  while others process them but do not return ICMP Error Messages. Such routers 
  hide the &quot;topology&quot; of the network, but also can impact correct operation of 
  protocols. Some routers will process the ICMP Messages, providing that they do 
  not impose a significant load on the routers, such routers do not always 
  respond to ICMP messages. When &quot;traceroute&quot; encounters a router that does not 
  respond, it prints a &quot;*&quot; character.</font></li>
</ul>
<p align="center"><b><font face="Arial"><a href="Main.htm" style="color: #00c">
MAIN</a></font></b></p>

</body>

</html>