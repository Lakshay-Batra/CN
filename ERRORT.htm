<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="File-List" href="ERRORT_files/filelist.xml">
<title>MAIN</title>
<!--[if !mso]>
<style>
v\:*         { behavior: url(#default#VML) }
o\:*         { behavior: url(#default#VML) }
.shape       { behavior: url(#default#VML) }
</style>
<![endif]--><!--[if gte mso 9]>
<xml><o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]-->
</head>

<body>

<p>&nbsp;</p>
<p align="center"><font face="Arial"><b><a href="Main.htm">MAIN</a></b></font></p>
<p align="center">
<span style="line-height: 107%; text-transform: uppercase; font-family: Arial; font-weight: 700; text-decoration: underline">
<font size="6" color="#FF0000">Types of errors</font></span></p>
<p class="MsoNormal" style="text-align: justify"><font face="Arial">
<span lang="EN">In information theory and coding theory with applications in 
computer science and telecommunication, <b>error detection and correction</b> or
<b>error control</b> are techniques that enable reliable delivery of digital 
data over unreliable communication channels. Many communication channels are 
subject to channel noise, and thus errors may be introduced during transmission 
from the source to a receiver. Error detection techniques allow detecting such 
errors, while error correction enables reconstruction of the original data in 
many cases.</span></font></p>
<p class="MsoNormal" align="justify"><font face="Arial">Data can be corrupted 
during transmission (three impairments: attenuation, distortion, noise). Some 
applications require that <br>
errors be detected and corrected.</font></p>
<p class="MsoNormal" align="justify"><font face="Arial">&nbsp;In a <b>single-bit 
error</b>, only 1 bit in the data unit has changed.</font></p>
<p class="MsoNormal" align="justify"><font face="Arial">&nbsp;<!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_s1025" type="#_x0000_t75" style='width:453pt;
 height:93.75pt;visibility:visible;mso-position-horizontal-relative:char;
 mso-position-vertical:absolute;mso-position-vertical-relative:line'>
 <v:imagedata src="ERRORT_files/image001.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=604 height=125
src="ERRORT_files/image002.jpg" v:shapes="_x0000_s1025"><![endif]></font></p>
<p class="MsoNormal" align="center"><font face="Arial"><b><i>Single-bit error</i></b></font></p>
<p class="MsoNormal" align="justify"><font face="Arial">&nbsp;&nbsp;A <b>burst error </b>
means that 2 or more bits in the data unit have changed.&nbsp;</font></p>
<p class="MsoNormal" align="center"><font face="Arial"><!--[if gte vml 1]><v:shape
 id="_x0000_s1026" type="#_x0000_t75" style='width:366pt;height:177pt;
 visibility:visible;mso-position-horizontal-relative:char;
 mso-position-vertical:absolute;mso-position-vertical-relative:line'>
 <v:imagedata src="ERRORT_files/image003.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=488 height=236
src="ERRORT_files/image004.jpg" v:shapes="_x0000_s1026"><![endif]></font></p>
<p class="MsoNormal" align="center"><font face="Arial">&nbsp;<b><i>Burst error of 
length 8</i></b></font></p>
<p class="MsoNormal" align="justify"><font face="Arial">To detect or correct 
errors, we need to send extra (redundant) bits with data.</font></p>
<p class="MsoNormal" align="justify"><font face="Arial">&nbsp;&nbsp;</font></p>
<p class="MsoNormal" align="justify"><font face="Arial"><!--[if gte vml 1]><v:shape
 id="_x0000_s1027" type="#_x0000_t75" style='width:466.5pt;height:188.25pt;
 visibility:visible;mso-position-horizontal-relative:char;
 mso-position-vertical:absolute;mso-position-vertical-relative:line'>
 <v:imagedata src="ERRORT_files/image005.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=622 height=251
src="ERRORT_files/image006.jpg" v:shapes="_x0000_s1027"><![endif]></font></p>
<p class="MsoNormal" align="center"><font face="Arial">&nbsp;<b><i>The structure of 
encoder and decoder</i></b></font></p>
<p class="MsoNormal" align="justify">&nbsp;</p>
<p class="MsoNormal" align="justify"><font face="Arial">In modulo-N arithmetic, 
we use only the integers in the range 0 to N &#8722;1, inclusive.</font></p>
<p class="MsoNormal" align="justify"><font face="Arial"><!--[if gte vml 1]><v:shape
 id="Picture_x0020_6" o:spid="_x0000_s1028" type="#_x0000_t75" style='width:467.25pt;
 height:114pt;visibility:visible;mso-position-horizontal-relative:char;
 mso-position-vertical:absolute;mso-position-vertical-relative:line'>
 <v:imagedata src="ERRORT_files/image007.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img border=0 width=623 height=152
src="ERRORT_files/image008.jpg" v:shapes="Picture_x0020_6"><![endif]></font></p>
<p class="MsoNormal" align="center"><font face="Arial">&nbsp;<b><i>XORing of two 
single bits or two words</i></b></font></p>
<p class="MsoNormal" align="justify"><font face="Arial"><b><i>&nbsp;</i>BLOCK CODING:</b> 
In block coding, we divide our message into blocks, each of k bits, called data 
words. We add r redundant bits to each block to make the length n = k + r. The 
resulting n-bit blocks are called code words.</font></p>
<p class="MsoNormal" align="justify"><font face="Arial">&nbsp;<b>Detection/Correction 
Techniques</b>&nbsp;</font></p>
<p class="MsoNormal" style="text-indent: -.25in; margin-left: .5in">
<font face="Arial">&#65533;</font><span style="font-style: normal; font-variant: normal; font-weight: normal; font-family: Arial">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><font face="Arial">Parity Checks</font></p>
<p class="MsoNormal" style="text-indent: -.25in; margin-left: .5in">
<font face="Arial">&#65533;</font><span style="font-style: normal; font-variant: normal; font-weight: normal; font-family: Arial">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><font face="Arial">Check summing methods</font></p>
<p class="MsoNormal" style="text-indent: -.25in; margin-left: .5in">
<font face="Arial">&#65533;</font><span style="font-style: normal; font-variant: normal; font-weight: normal; font-family: Arial">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><font face="Arial">Cyclic redundancy checks</font></p>
<p class="MsoNormal" style="text-autospace: none"><font face="Arial"><b>
Transmission Errors</b></font></p>
<blockquote>
  <p class="MsoNormal" style="text-autospace: none"><font face="Arial">
  <span style="font-family: TTE25E3928t00">_</span>Causes: noises, attenuation, 
  distortion, crosstalk, losing synchronization</font></p>
  <p class="MsoNormal" style="text-autospace: none"><font face="Arial">
  <span style="font-family: TTE25E3928t00">_</span>Error detection</font></p>
  <p class="MsoNormal" style="text-autospace: none"><font face="Arial">– Parity 
  checks, cyclic redundancy codes, …</font></p>
  <p class="MsoNormal" style="text-autospace: none"><font face="Arial">
  <span style="font-family: TTE25E3928t00">_</span>Error correction</font></p>
  <p class="MsoNormal" style="text-autospace: none"><font face="Arial">– send 
  redundant information with data</font></p>
  <p class="MsoNormal" style="text-autospace: none"><font face="Arial">– when 
  receiving data incorrectly, the receiver makes “educated guess” about the 
  original data</font></p>
  <p class="MsoNormal"><font face="Arial">– Ex. Hamming code</font></p>
</blockquote>
<p align="center"><font face="Arial"><b><a href="Main.htm">MAIN</a></b></font></p>

</body>

</html>
